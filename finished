#Импортируем нужные библиотеки
from instagrapi import Client
import tensorflow as tf
from tkinter import *
import numpy as np
# Функция нажатия на кнопку
def clicked():
    # Авторизация
    cl = Client()
    cl.login("LOGIN", "PASSWORD")
#    Получение URL поста
    url = "{}".format(txt.get())
    media_pk = cl.media_pk_from_url(url)
    media_info = cl.media_info(media_pk).dict()
    comment_count = (media_info['comment_count'] / 307274) # Количество комментариев
    comments_disabled = 0 # Разрешены или не разрешены комментарии
    like_count = (media_info['like_count'] / 11318802) # Количество лайков
    is_video = 1   # Видео/не видео

    if media_info['comment_count'] != 0:           #
        comments_disabled = comments_disabled
    else:
        comments_disabled = 1

    if media_info['video_duration'] != 0.0:
        is_video = is_video
    else:
        is_video = 0

    matrix = [[comment_count, comments_disabled, like_count, is_video]]    # Полученные данные в нужном формате

    savedmodel = tf.keras.models.load_model("testModels/model")       # Загружаем нейронную сеть

    X_test = matrix                        #

    predictionsS = np.round((savedmodel.predict(X_test)), 0)         # округляем полученный ответ до целого

    if predictionsS == [[0.]]:              # Вывод на экран ответа
        lbl5.configure(text="Ваш пост имеет маленькую популярность",bg="green", font=("Comic Sans MS",10,"bold"),fg="black")
    else:
        lbl5.configure(text="Ваш пост имеет хорошую популярность",bg="green", font=("Comic Sans MS",10,"bold"),fg="black")
    lbl2.configure(text="Количество лайков: {}".format(media_info['like_count']))              # Вывод на экран данных о посте
    lbl3.configure(text="Количество комментариев: {}".format(media_info['comment_count']))
    lbl4.configure(text="Время публикации: {}".format(media_info["taken_at"]))
    txt.delete(0, END)

#Создаём интерфейс для приложения
window = Tk()
window.title("Приложение для анализа постов")
window.geometry('400x300')
window.resizable(width=False,height=False)
window.iconbitmap("Insta.ico")
lbl = Label(window, text="Введите URL:",bg="green", font=("Comic Sans MS",10,"bold"),fg="black")
lbl.grid(column=0, row=0)
lbl1 = Label(window, text="")
lbl1.grid(column=1, row=2)
lbl2 = Label(window, text="Количество лайков: ", bg="green", font=("Comic Sans MS",10,"bold"),fg="black")
lbl2.grid(column=1, row=3)
lbl3 = Label(window, text="Количество комментариев: ", bg="green", font=("Comic Sans MS",10,"bold"),fg="black")
lbl3.grid(column=1, row=4)
lbl4 = Label(window, text="Время публикации: ", bg="green", font=("Comic Sans MS",10,"bold"),fg="black")
lbl4.grid(column=1, row=5)
lbl5 = Label(window, text="")
lbl5.grid(column=1, row=2)
txt = Entry(window, width=40)
txt.grid(column=1, row=0)
btn = Button(window, text="Анализ", command=clicked, bg="green",font=("Comic Sans MS",10,"bold"),fg="black")     # Кнопка активации функции
btn.grid(column=2, row=0)
window.mainloop()
